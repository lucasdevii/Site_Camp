datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       Int     @id @default(autoincrement())
  name     String
  email    String  @unique
  password String
  details  String?
  code     String     @unique @default(uuid())
  //falta dar o prisma generate e dar upload no banco
  isOnline Boolean


  sentFriendRequests     Friends[] @relation("SentRequests")
  receivedFriendRequests Friends[] @relation("ReceivedRequests")
}

model FriendsStatus {
  id             Int              @id @default(autoincrement())
  requester      User             @relation("SentRequests", fields: [idFirstPlayer], references: [id])
  receiver       User             @relation("ReceivedRequests", fields: [idSecondPlayer], references: [id])
  idFirstPlayer  Int
  idSecondPlayer Int
  status         FriendshipStatus @default(PENDING)
  createdAt      DateTime         @default(now())
}
model ChatInfos {
  id             Int              @id @default(autoincrement())
  participants   ChatParticipants[]
  messages       ChatTalks[]
}
model ChatParticipants {
  id             Int              @id @default(autoincrement())
  chatRoomId     Int
  chatRoom       ChatInfos        @relation(fields: [chatRoomId], references: [id])
  userId         Int
  name           String
}
model ChatTalks {
  id             Int              @id @default(autoincrement())
  conversation   String 
  authorId       Int
  chatRoomId     Int
  chatRoom       ChatInfos        @relation(fields: [chatRoomId], references: [id])
  createdAt      DateTime         @default(now())
}

enum FriendshipStatus {
  PENDING
  ACCEPTED
  REJECTED
  BLOCKED
}
